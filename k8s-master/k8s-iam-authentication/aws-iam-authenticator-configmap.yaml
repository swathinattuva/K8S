---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-system
  name: aws-iam-authenticator
  labels:
    k8s-app: aws-iam-authenticator
data:
  config.yaml: |
    # a unique-per-cluster identifier to prevent replay attacks
    # (good choices are a random token or a domain name that will be unique to your cluster)
    clusterID: k8s.enjoylife.org.in
    server:
      # each mapRoles entry maps an IAM role to a username and set of groups
      # Each username and group can optionally contain template parameters:
      #  1) "{{AccountID}}" is the 12 digit AWS ID.
      #  2) "{{SessionName}}" is the role session name.
      mapRoles:
      - roleARN: arn:aws:iam::<AWS_ACCOUNT_ID>:role/kops_iam_admin
        username: kops_iam_admin:{{AccountID}}:{{SessionName}}
        groups:
        - system:masters
      - roleARN: arn:aws:iam::<AWS_ACCOUNT_ID>:role/kops_iam_developer
        username: kops_iam_developer:{{AccountID}}:{{SessionName}}
        groups:
        - myfirstcluster.k8s.local-developer

# developer specific role bindings
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: k8s.enjoylife.org.in-developer-dev-binding
  namespace: development
subjects:
- kind: Group
  name: k8s.enjoylife.org.in-developer
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: ""
